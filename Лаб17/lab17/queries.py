# queries.py
from sqlalchemy import func, desc
from sqlalchemy.orm import sessionmaker
from models import Teacher, Student, Course, student_course
from database import engine

# –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
Session = sessionmaker(bind=engine)
session = Session()

def query_1_all_students_and_courses():
    """–ó–∞–ø—Ä–æ—Å 1: –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∫—É—Ä—Å—ã"""
    print("=== –°–¢–£–î–ï–ù–¢–´ –ò –ò–• –ö–£–†–°–´ ===")
    
    students = session.query(Student).all()
    
    for student in students:
        print(f"\n{student.first_name} {student.last_name} ({student.email})")
        if student.courses:
            for course in student.courses:
                print(f"  - {course.title}")
        else:
            print("  - –ù–µ –∑–∞–ø–∏—Å–∞–Ω –Ω–∏ –Ω–∞ –æ–¥–∏–Ω –∫—É—Ä—Å")

def query_2_teachers_and_courses():
    """–ó–∞–ø—Ä–æ—Å 2: –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ö –∫—É—Ä—Å–æ–≤"""
    print("\n=== –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–ò –ò –ö–û–õ–ò–ß–ï–°–¢–í–û –ö–£–†–°–û–í ===")
    
    # –ó–∞–ø—Ä–æ—Å —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –∏ –ø–æ–¥—Å—á–µ—Ç–æ–º
    teachers_with_count = session.query(
        Teacher.first_name,
        Teacher.last_name,
        Teacher.specialization,
        func.count(Course.id).label('course_count')
    ).join(Course).group_by(Teacher.id).all()
    
    for teacher in teachers_with_count:
        print(f"{teacher.first_name} {teacher.last_name} ({teacher.specialization}) - {teacher.course_count} –∫—É—Ä—Å(–æ–≤)")

def query_3_popular_courses():
    """–ó–∞–ø—Ä–æ—Å 3: –°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫—É—Ä—Å—ã (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤)"""
    print("\n=== –ü–û–ü–£–õ–Ø–†–ù–´–ï –ö–£–†–°–´ ===")
    
    # –ó–∞–ø—Ä–æ—Å —Å –ø–æ–¥—Å—á–µ—Ç–æ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –∫–∞–∂–¥–æ–º –∫—É—Ä—Å–µ
    popular_courses = session.query(
        Course.title,
        func.count(student_course.c.student_id).label('student_count')
    ).join(student_course).group_by(Course.id).order_by(desc('student_count')).all()
    
    for course in popular_courses:
        print(f"{course.title} - {course.student_count} —Å—Ç—É–¥–µ–Ω—Ç(–æ–≤)")

def query_4_students_by_course():
    """–ó–∞–ø—Ä–æ—Å 4: –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞"""
    print("\n=== –°–¢–£–î–ï–ù–¢–´ –ö–£–†–°–ê 'Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö' ===")
    
    # –ù–∞—Ö–æ–¥–∏–º –∫—É—Ä—Å Python
    python_course = session.query(Course).filter(
        Course.title == "Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö"
    ).first()
    
    if python_course:
        print(f"–ö—É—Ä—Å: {python_course.title}")
        print(f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {python_course.teacher.first_name} {python_course.teacher.last_name}")
        print("–°—Ç—É–¥–µ–Ω—Ç—ã:")
        for student in python_course.students:
            print(f"  - {student.first_name} {student.last_name} ({student.email})")
    else:
        print("–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")

def query_5_teacher_workload():
    """–ó–∞–ø—Ä–æ—Å 5: –ù–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π (–æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤)"""
    print("\n=== –ù–ê–ì–†–£–ó–ö–ê –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–ï–ô ===")
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —É –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    workload = session.query(
        Teacher.first_name,
        Teacher.last_name,
        func.count(student_course.c.student_id).label('total_students')
    ).join(Course).join(student_course).group_by(Teacher.id).order_by(desc('total_students')).all()
    
    for teacher in workload:
        print(f"{teacher.first_name} {teacher.last_name} - {teacher.total_students} —Å—Ç—É–¥–µ–Ω—Ç(–æ–≤)")

def query_6_courses_without_students():
    """–ó–∞–ø—Ä–æ—Å 6: –ö—É—Ä—Å—ã –±–µ–∑ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"""
    print("\n=== –ö–£–†–°–´ –ë–ï–ó –°–¢–£–î–ï–ù–¢–û–í ===")
    
    # –ù–∞—Ö–æ–¥–∏–º –∫—É—Ä—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω
    empty_courses = session.query(Course).filter(
        ~Course.students.any()
    ).all()
    
    if empty_courses:
        for course in empty_courses:
            print(f"- {course.title} (–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {course.teacher.first_name} {course.teacher.last_name})")
    else:
        print("–í—Å–µ –∫—É—Ä—Å—ã –∏–º–µ—é—Ç –∑–∞–ø–∏—Å–∞–≤—à–∏—Ö—Å—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")

def query_7_students_multiple_courses():
    """–ó–∞–ø—Ä–æ—Å 7: –°—Ç—É–¥–µ–Ω—Ç—ã, –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—É—Ä—Å–æ–≤"""
    print("\n=== –°–¢–£–î–ï–ù–¢–´ –ù–ê –ù–ï–°–ö–û–õ–¨–ö–ò–• –ö–£–†–°–ê–• ===")
    
    # –°—Ç—É–¥–µ–Ω—Ç—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫—É—Ä—Å–æ–≤ –±–æ–ª—å—à–µ 1
    active_students = session.query(
        Student.first_name,
        Student.last_name,
        func.count(student_course.c.course_id).label('course_count')
    ).join(student_course).group_by(Student.id).having(
        func.count(student_course.c.course_id) > 1
    ).order_by(desc('course_count')).all()
    
    for student in active_students:
        print(f"{student.first_name} {student.last_name} - {student.course_count} –∫—É—Ä—Å(–æ–≤)")

def query_8_detailed_course_info():
    """–ó–∞–ø—Ä–æ—Å 8: –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–∂–¥–æ–º –∫—É—Ä—Å–µ"""
    print("\n=== –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–£–†–°–ê–• ===")
    
    courses = session.query(Course).all()
    
    for course in courses:
        print(f"\nüìö {course.title}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {course.description}")
        print(f"   –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {course.teacher.first_name} {course.teacher.last_name}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {len(course.students)}")
        if course.students:
            print("   –°—Ç—É–¥–µ–Ω—Ç—ã:")
            for student in course.students:
                print(f"     - {student.first_name} {student.last_name}")

def query_9_teachers_by_specialization():
    """–ó–∞–ø—Ä–æ—Å 9: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
    print("\n=== –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–ò –ü–û –°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø–ú ===")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    specializations = session.query(Teacher.specialization).distinct().all()
    
    for spec in specializations:
        print(f"\n{spec[0]}:")
        teachers = session.query(Teacher).filter(
            Teacher.specialization == spec[0]
        ).all()
        
        for teacher in teachers:
            course_count = len(teacher.courses)
            print(f"  - {teacher.first_name} {teacher.last_name} ({course_count} –∫—É—Ä—Å(–æ–≤))")

def run_all_queries():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –ø–æ—Ä—è–¥–∫—É"""
    print("="*60)
    print("–í–´–ü–û–õ–ù–ï–ù–ò–ï –ó–ê–ü–†–û–°–û–í –ö –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("="*60)
    
    query_1_all_students_and_courses()
    query_2_teachers_and_courses()
    query_3_popular_courses()
    query_4_students_by_course()
    query_5_teacher_workload()
    query_6_courses_without_students()
    query_7_students_multiple_courses()
    query_8_detailed_course_info()
    query_9_teachers_by_specialization()
    
    print("\n" + "="*60)
    print("–í–°–ï –ó–ê–ü–†–û–°–´ –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("="*60)

if __name__ == "__main__":
    run_all_queries()